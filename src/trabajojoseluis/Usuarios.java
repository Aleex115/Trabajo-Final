/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package trabajojoseluis;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import misclases.Conex;
import static misclases.Encriptador.encryptPassword;
import misclases.Validador;

public class Usuarios extends javax.swing.JFrame {

    String rb = "clientes";
    DefaultTableModel dtm = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int column) {
            // Hacer que todas las celdas no sean editables
            return false;
        }
    };

    public void RellenarDatos(String campo, DefaultTableModel dtm, String nombre, String dni) {
        try {
            Connection conexion = Conex.devolverConex();
            String sql = "SELECT * FROM " + campo + " WHERE nombre LIKE ? AND dni LIKE ?";

            PreparedStatement sentecia = (PreparedStatement) conexion.prepareStatement(sql);
            sentecia.setString(1, nombre.trim() + "%");
            sentecia.setString(2, dni.trim() + "%");

            ResultSet rs = sentecia.executeQuery();
            if (campo.equals("mecanicos") || campo.equals("vendedores")) {
                while (rs.next()) {
                    Object[] rowData = {rs.getString("dni"), rs.getString("nombre"), rs.getInt("sueldo"), rs.getInt("num"), rs.getString("email")};
                    dtm.addRow(rowData);
                }
            } else {
                while (rs.next()) {
                    Object[] rowData = {rs.getString("dni"), rs.getString("nombre"), rs.getInt("num"), rs.getString("email")};
                    dtm.addRow(rowData);
                }
            }
            rs.close();
            sentecia.close();
            Conex.CerrarConex();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(Usuarios.this, e);
        }
    }

    /**
     * Creates new form Usuarios
     */
    public Usuarios() {
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.setTitle("Gestion de usuarios");
        this.setSize(960, 600);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        rbClientes = new javax.swing.JRadioButton();
        rbVendedores = new javax.swing.JRadioButton();
        rbMecanicos = new javax.swing.JRadioButton();
        rbProveedores = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtDNI = new javax.swing.JTextField();
        btnConsulta = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla = new javax.swing.JTable();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Gill Sans MT", 0, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(200, 200, 200));
        jLabel1.setText("Consultar usuarios");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 40, -1, -1));

        buttonGroup1.add(rbClientes);
        rbClientes.setFont(new java.awt.Font("Gill Sans MT", 0, 16)); // NOI18N
        rbClientes.setForeground(new java.awt.Color(200, 200, 200));
        rbClientes.setText("Clientes");
        getContentPane().add(rbClientes, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 150, -1, -1));

        buttonGroup1.add(rbVendedores);
        rbVendedores.setFont(new java.awt.Font("Gill Sans MT", 0, 16)); // NOI18N
        rbVendedores.setForeground(new java.awt.Color(200, 200, 200));
        rbVendedores.setText("Vendedores");
        getContentPane().add(rbVendedores, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 150, -1, -1));

        buttonGroup1.add(rbMecanicos);
        rbMecanicos.setFont(new java.awt.Font("Gill Sans MT", 0, 16)); // NOI18N
        rbMecanicos.setForeground(new java.awt.Color(200, 200, 200));
        rbMecanicos.setText("Mecanicos");
        getContentPane().add(rbMecanicos, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 150, -1, -1));

        buttonGroup1.add(rbProveedores);
        rbProveedores.setFont(new java.awt.Font("Gill Sans MT", 0, 16)); // NOI18N
        rbProveedores.setForeground(new java.awt.Color(200, 200, 200));
        rbProveedores.setText("Proveedores");
        getContentPane().add(rbProveedores, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 150, -1, -1));

        jLabel3.setFont(new java.awt.Font("Gill Sans MT", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(200, 200, 200));
        jLabel3.setText("Que quieres consultar: ");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, -1));

        jLabel4.setFont(new java.awt.Font("Gill Sans MT", 0, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(200, 200, 200));
        jLabel4.setText("Nombre: ");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, -1, -1));

        txtNombre.setFont(new java.awt.Font("Gill Sans MT", 0, 16)); // NOI18N
        txtNombre.setForeground(new java.awt.Color(20, 20, 20));
        getContentPane().add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 240, 100, -1));

        jLabel5.setFont(new java.awt.Font("Gill Sans MT", 0, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(200, 200, 200));
        jLabel5.setText("DNI:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 240, -1, -1));

        txtDNI.setFont(new java.awt.Font("Gill Sans MT", 0, 16)); // NOI18N
        txtDNI.setForeground(new java.awt.Color(20, 20, 20));
        txtDNI.setText(" ");
        getContentPane().add(txtDNI, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 240, 100, -1));

        btnConsulta.setBackground(new java.awt.Color(80, 80, 82));
        btnConsulta.setFont(new java.awt.Font("Gill Sans MT", 0, 16)); // NOI18N
        btnConsulta.setForeground(new java.awt.Color(200, 200, 200));
        btnConsulta.setText("Realizar consulta");
        btnConsulta.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnConsulta.setContentAreaFilled(false);
        btnConsulta.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultaActionPerformed(evt);
            }
        });
        getContentPane().add(btnConsulta, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 230, 130, 30));

        jScrollPane1.setPreferredSize(new java.awt.Dimension(410, 390));

        Tabla.setFont(new java.awt.Font("Gill Sans MT", 0, 14)); // NOI18N
        Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(Tabla);
        if (Tabla.getColumnModel().getColumnCount() > 0) {
            Tabla.getColumnModel().getColumn(0).setHeaderValue("Title 1");
            Tabla.getColumnModel().getColumn(1).setHeaderValue("Title 2");
            Tabla.getColumnModel().getColumn(2).setHeaderValue("Title 3");
            Tabla.getColumnModel().getColumn(3).setHeaderValue("Title 4");
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 280, 990, 280));

        btnModificar.setBackground(new java.awt.Color(80, 80, 82));
        btnModificar.setFont(new java.awt.Font("Gill Sans MT", 0, 14)); // NOI18N
        btnModificar.setForeground(new java.awt.Color(200, 200, 200));
        btnModificar.setText("Modificar ");
        btnModificar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnModificar.setContentAreaFilled(false);
        btnModificar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        getContentPane().add(btnModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 230, 80, 30));

        btnEliminar.setBackground(new java.awt.Color(80, 80, 82));
        btnEliminar.setFont(new java.awt.Font("Gill Sans MT", 0, 14)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(200, 200, 200));
        btnEliminar.setText("Eliminar");
        btnEliminar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnEliminar.setContentAreaFilled(false);
        btnEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 230, 80, 30));

        btnAgregar.setBackground(new java.awt.Color(80, 80, 82));
        btnAgregar.setFont(new java.awt.Font("Gill Sans MT", 0, 14)); // NOI18N
        btnAgregar.setForeground(new java.awt.Color(200, 200, 200));
        btnAgregar.setText("Agregar");
        btnAgregar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAgregar.setContentAreaFilled(false);
        btnAgregar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        getContentPane().add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 230, 80, 30));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/UIX/fondoazul.jpg"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1060, 560));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultaActionPerformed
        // Vaciar la tabla
        dtm.setRowCount(0);
        // Establecer las columnas según la selección del usuario
        String[] titulos;
        if (rbClientes.isSelected() || rbProveedores.isSelected()) {
            titulos = new String[]{"DNI", "Nombre", "Numero", "Email"};
        } else {
            titulos = new String[]{"DNI", "Nombre", "Sueldo", "Numero", "Email"};
        }
        dtm.setColumnIdentifiers(titulos);
        Tabla.setModel(dtm);
        if (rbClientes.isSelected()) {
            rb = "clientes";
        }
        if (rbVendedores.isSelected()) {
            rb = "vendedores";
        }
        if (rbProveedores.isSelected()) {
            rb = "proveedores";
        }
        if (rbMecanicos.isSelected()) {
            rb = "mecanicos";
        }
        RellenarDatos(rb, dtm, txtNombre.getText(), txtDNI.getText());


    }//GEN-LAST:event_btnConsultaActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        if (JOptionPane.showConfirmDialog(Usuarios.this, "Estas seguro de quieres modificar la tabla") == 0) {

            try {
                Connection conexion = Conex.devolverConex();
                if (rb.equals("vendedores") || rb.equals("mecanicos")) {
                    String dni = JOptionPane.showInputDialog(Usuarios.this, "Introduce el nuevo dni o dejalo en blanco si el mismo");
                    if (dni.trim().isEmpty()) {
                        dni = (String) dtm.getValueAt(Tabla.getSelectedRow(), 0);
                    }
                    dtm.setValueAt(dni, Tabla.getSelectedRow(), 0);

                    String nombre = JOptionPane.showInputDialog(Usuarios.this, "Introduce el nuevo nombre o dejalo en blanco si el mismo");
                    if (nombre.trim().isEmpty()) {
                        nombre = (String) dtm.getValueAt(Tabla.getSelectedRow(), 1);
                    }
                    dtm.setValueAt(nombre, Tabla.getSelectedRow(), 1);

                    String sueldostr = JOptionPane.showInputDialog(Usuarios.this, "Introduce el nuevo sueldo o dejalo en blanco si el mismo");
                    int sueldo;
                    if (sueldostr.trim().isEmpty()) {
                        sueldo = (Integer) dtm.getValueAt(Tabla.getSelectedRow(), 2);
                    } else {
                        sueldo = Integer.parseInt(sueldostr.trim());
                    }
                    dtm.setValueAt(sueldo, Tabla.getSelectedRow(), 2);

                    String numstr = JOptionPane.showInputDialog(Usuarios.this, "Introduce el nuevo numero o dejalo en blanco si el mismo");
                    int num;
                    if (numstr.trim().isEmpty()) {
                        num = (Integer) dtm.getValueAt(Tabla.getSelectedRow(), 3);
                    } else {
                        num = Integer.parseInt(numstr.trim());
                    }
                    dtm.setValueAt(num, Tabla.getSelectedRow(), 3);

                    String email = JOptionPane.showInputDialog(Usuarios.this, "Introduce el nuevo email o dejalo en blanco si el mismo");
                    if (email.trim().isEmpty()) {
                        email = (String) dtm.getValueAt(Tabla.getSelectedRow(), 4);
                    }
                    dtm.setValueAt(email, Tabla.getSelectedRow(), 4);

                    String passwd = JOptionPane.showInputDialog(Usuarios.this, "Introduce la nueva contraseña o dejalo en blanco si no quieres contraseña");
                    if (passwd.trim().isEmpty()) {
                        passwd = passwd.trim();
                    }
                    passwd = encryptPassword(passwd);

                    String sql = "update " + rb + " set dni= ? ,nombre= ?, sueldo= ?  ,num= ? ,email = ? ,passwd = ?   where dni like ? ;";

                    PreparedStatement sentecia = (PreparedStatement) conexion.prepareStatement(sql);
                    sentecia.setString(1, dni);
                    sentecia.setString(2, nombre);
                    sentecia.setInt(3, sueldo);
                    sentecia.setInt(4, num);
                    sentecia.setString(5, email);
                    sentecia.setString(6, passwd);
                    sentecia.setString(7, dni);
                    sentecia.executeUpdate();
                    sentecia.close();
                    Conex.CerrarConex();

                } else {
                    String dni = JOptionPane.showInputDialog(Usuarios.this, "Introduce el nuevo dni o dejalo en blanco si el mismo");
                    if (dni.trim().isEmpty()) {
                        dni = (String) dtm.getValueAt(Tabla.getSelectedRow(), 0);
                    }
                    dtm.setValueAt(dni, Tabla.getSelectedRow(), 0);

                    String nombre = JOptionPane.showInputDialog(Usuarios.this, "Introduce el nuevo nombre o dejalo en blanco si el mismo");
                    if (nombre.trim().isEmpty()) {
                        nombre = (String) dtm.getValueAt(Tabla.getSelectedRow(), 1);
                    }
                    dtm.setValueAt(nombre, Tabla.getSelectedRow(), 1);

                    String numstr = JOptionPane.showInputDialog(Usuarios.this, "Introduce el nuevo numero o dejalo en blanco si el mismo");
                    int num;
                    if (numstr.trim().isEmpty()) {
                        num = (Integer) dtm.getValueAt(Tabla.getSelectedRow(), 2);
                    } else {
                        num = Integer.parseInt(numstr.trim());
                    }

                    dtm.setValueAt(num, Tabla.getSelectedRow(), 2);

                    String email = JOptionPane.showInputDialog(Usuarios.this, "Introduce el nuevo email o dejalo en blanco si el mismo");
                    if (email.trim().isEmpty()) {
                        email = (String) dtm.getValueAt(Tabla.getSelectedRow(), 3);
                    }
                    dtm.setValueAt(email, Tabla.getSelectedRow(), 3);

                    String passwd = JOptionPane.showInputDialog(Usuarios.this, "Introduce la nueva contraseña o dejalo en blanco si no quieres contraseña");
                    if (passwd.trim().isEmpty()) {
                        passwd = passwd.trim();
                    }
                    passwd = encryptPassword(passwd);

                    String sql = "update " + rb + " set dni= ? ,nombre= ?  ,num= ? ,email = ? ,passwd = ?   where dni like ? ;";

                    PreparedStatement sentecia = (PreparedStatement) conexion.prepareStatement(sql);
                    sentecia.setString(1, dni);
                    sentecia.setString(2, nombre);
                    sentecia.setInt(3, num);
                    sentecia.setString(4, email);
                    sentecia.setString(5, passwd);
                    sentecia.setString(6, dni);
                    sentecia.executeUpdate();
                    sentecia.close();
                    Conex.CerrarConex();

                }

                JOptionPane.showMessageDialog(Usuarios.this, "Fila modificada correctamente");

            } catch (com.mysql.jdbc.exceptions.MySQLIntegrityConstraintViolationException e) {
                JOptionPane.showMessageDialog(Usuarios.this, "No se puede borrar esa fila");
            } catch (SQLException e) {
                System.out.println(e);
            }
        } else {
            JOptionPane.showMessageDialog(Usuarios.this, "Fila no borrada");
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if (JOptionPane.showConfirmDialog(Usuarios.this, "Estas seguro de quieres eliminarlo") == 0) {
            String dni = (String) dtm.getValueAt(Tabla.getSelectedRow(), 0);
            dtm.removeRow(Tabla.getSelectedRow());
            try {
                Connection conexion = Conex.devolverConex();
                String sql = "delete from " + rb + " where dni like ? ;";
                PreparedStatement sentecia = (PreparedStatement) conexion.prepareStatement(sql);
                sentecia.setString(1, dni);
                sentecia.executeUpdate();
                sentecia.close();
                Conex.CerrarConex();
                JOptionPane.showMessageDialog(Usuarios.this, "Fila borrada correctamente");

            } catch (com.mysql.jdbc.exceptions.MySQLIntegrityConstraintViolationException e) {
                JOptionPane.showMessageDialog(Usuarios.this, "No se puede borrar esa fila");
            } catch (SQLException e) {
                System.out.println(e);
            }
        } else {
            JOptionPane.showMessageDialog(Usuarios.this, "Fila no borrada");
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        if (rbClientes.isSelected()) {
            rb = "clientes";
        }
        if (rbVendedores.isSelected()) {
            rb = "vendedores";
        }
        if (rbProveedores.isSelected()) {
            rb = "proveedores";
        }
        if (rbMecanicos.isSelected()) {
            rb = "mecanicos";
        }
        Agregar agregar = new Agregar(rb);
        agregar.setVisible(true);
    }//GEN-LAST:event_btnAgregarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Usuarios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Tabla;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnConsulta;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rbClientes;
    private javax.swing.JRadioButton rbMecanicos;
    private javax.swing.JRadioButton rbProveedores;
    private javax.swing.JRadioButton rbVendedores;
    private javax.swing.JTextField txtDNI;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
